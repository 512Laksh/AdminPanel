<div class="container1">

    <div id="chat-screen" >
        
        <div class="sidebar">
            <div class="user-profile">
                <span id="current-user"></span>
            </div>
            <!-- <div class="chat-modes">
                    <button class="mode-btn active" data-mode="private">Private</button>
                    <button class="mode-btn" data-mode="broadcast">Broadcast</button>
                </div> -->
            <div id="users-list">
                <?php foreach ($users as $user): ?>
                    <?php if ($user['uname'] != session()->get('user_name')): ?>
                        <div class="user-item" data-username="<?= $user['uname'] ?>"><?= $user['uname'] ?></div>
                    <?php endif; ?>
                <?php endforeach; ?>
            </div>
        </div>

        <div class="chat-area">
            <div class="chat-header">
                <span id="recipient-name">Select a user to chat</span>
                <span id="chat-mode"></span>
            </div>
            <div id="messages" class="messages-container">
                <div class="left"></div>
                <div class="right"></div>
            </div>
            <div class="message-input hidden">
                <input type="text" id="message-input" placeholder="Type a message...">
                <button id="send-btn">Send</button>
            </div>
        </div>
    </div>
</div>

























<script src=" <?= base_url("cdn/socket.io.js") ?>"></script>
        <script>

            const socket = io('http://localhost:3000');

            // DOM Elements
            const loginScreen = document.getElementById('login-screen');
            const chatScreen = document.getElementById('chat-screen');
            const usernameInput = document.getElementById('username');
            const loginBtn = document.getElementById('login-btn');
            const currentUserSpan = document.getElementById('current-user');
            const recipientName = document.getElementById('recipient-name');
            const chatMode = document.getElementById('chat-mode');
            const messageInput = document.getElementById('message-input');
            const sendBtn = document.getElementById('send-btn');
            // const messagesContainer = document.getElementById('messages');
            const usersList = document.getElementById('users-list');
            const modeBtns = document.querySelectorAll('.mode-btn');
            const userItem = document.querySelectorAll('.user-item')

            // State
            let currentUser = null;
            let receiver = null;
            // let chatType = 'private';


            let username = "<?= session()->get('user_name') ?>"
            currentUserSpan.textContent = "<?= session()->get('user_name') ?>"
            socket.emit('username', username);

            userItem.forEach(user => {
                user.addEventListener('click', () => {
                    document.querySelector(".message-input").classList.remove('hidden')
                    receiver = user.dataset.username;
                    recipientName.textContent = receiver;
                    // messagesContainer.innerHTML = '';
                    socket.emit('joinRoom', {
                        sender: username,
                        receiver: receiver
                    });
                });
            });


            function sendMessage() {
                const message = messageInput.value.trim();
                if (message && receiver) {
                    socket.emit('send-message', {
                        sender: username,
                        receiver: receiver,
                        message: message
                    });
                    messageInput.value = '';
                }
            }

            socket.on('previousMessages', (messages) => {
                const chatHistory = document.getElementById('messages');
                chatHistory.innerHTML = '';
                messages.forEach(msg => {
                    const messageDiv = document.createElement('div');
                    messageDiv.className = `message ${msg.sender === username ? 'sender-message' : 'receiver-message'}`;
                    messageDiv.textContent = msg.message;
                    chatHistory.appendChild(messageDiv);
                });
                chatHistory.scrollTop = chatHistory.scrollHeight;
            });

            socket.on('new-message', (message) => {
                const chatHistory = document.getElementById('messages');
                const messageDiv = document.createElement('div');
                messageDiv.className = `message ${message.sender === username ? 'sender-message' : 'receiver-message'}`;
                messageDiv.textContent = message.message;
                chatHistory.appendChild(messageDiv);
                chatHistory.scrollTop = chatHistory.scrollHeight;
            });

            sendBtn.addEventListener('click', sendMessage);
            messageInput.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    sendMessage();
                }
            });

        </script>